// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JprotobufBeanA.ptoto

package com.rminfo.server.protoTest.protobuf;

public final class JprotobufBeanA {
  private JprotobufBeanA() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JprotobufBeanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rminfo.server.protoTest.protobuf.JprotobufBean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 5;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 5;</code>
     */
    String getName();
    /**
     * <code>optional string name = 5;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 id = 6;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 6;</code>
     */
    int getId();

    /**
     * <code>optional string email = 7;</code>
     */
    boolean hasEmail();
    /**
     * <code>optional string email = 7;</code>
     */
    String getEmail();
    /**
     * <code>optional string email = 7;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <code>optional double doubleF = 8;</code>
     */
    boolean hasDoubleF();
    /**
     * <code>optional double doubleF = 8;</code>
     */
    double getDoubleF();

    /**
     * <code>optional float floatF = 9;</code>
     */
    boolean hasFloatF();
    /**
     * <code>optional float floatF = 9;</code>
     */
    float getFloatF();

    /**
     * <code>optional bytes bytesF = 10;</code>
     */
    boolean hasBytesF();
    /**
     * <code>optional bytes bytesF = 10;</code>
     */
    com.google.protobuf.ByteString getBytesF();

    /**
     * <code>optional bool boolF = 11;</code>
     */
    boolean hasBoolF();
    /**
     * <code>optional bool boolF = 11;</code>
     */
    boolean getBoolF();

    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */
    int getMapCount();
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */
    boolean containsMap(
            String key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getMap();
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */
    java.util.Map<String, String>
    getMapMap();
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    String getMapOrDefault(
            String key,
            String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    String getMapOrThrow(
            String key);

    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    boolean hasSimpleTypeTest();
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    ComplexTypeTest getSimpleTypeTest();
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    ComplexTypeTestOrBuilder getSimpleTypeTestOrBuilder();
  }
  /**
   * Protobuf type {@code com.rminfo.server.protoTest.protobuf.JprotobufBean}
   */
  public  static final class JprotobufBean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rminfo.server.protoTest.protobuf.JprotobufBean)
      JprotobufBeanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JprotobufBean.newBuilder() to construct.
    private JprotobufBean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JprotobufBean() {
      name_ = "";
      id_ = 0;
      email_ = "";
      doubleF_ = 0D;
      floatF_ = 0F;
      bytesF_ = com.google.protobuf.ByteString.EMPTY;
      boolF_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JprotobufBean(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                map_ = com.google.protobuf.MapField.newMapField(
                    MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<String, String>
              map__ = input.readMessage(
                  MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              map_.getMutableMap().put(
                  map__.getKey(), map__.getValue());
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              email_ = bs;
              break;
            }
            case 65: {
              bitField0_ |= 0x00000008;
              doubleF_ = input.readDouble();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000010;
              floatF_ = input.readFloat();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000020;
              bytesF_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              boolF_ = input.readBool();
              break;
            }
            case 146: {
              ComplexTypeTest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = simpleTypeTest_.toBuilder();
              }
              simpleTypeTest_ = input.readMessage(ComplexTypeTest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(simpleTypeTest_);
                simpleTypeTest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              JprotobufBean.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 5;
    private volatile Object name_;
    /**
     * <code>optional string name = 5;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 5;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 6;
    private int id_;
    /**
     * <code>optional int32 id = 6;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 6;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int EMAIL_FIELD_NUMBER = 7;
    private volatile Object email_;
    /**
     * <code>optional string email = 7;</code>
     */
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string email = 7;</code>
     */
    public String getEmail() {
      Object ref = email_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          email_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string email = 7;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      Object ref = email_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOUBLEF_FIELD_NUMBER = 8;
    private double doubleF_;
    /**
     * <code>optional double doubleF = 8;</code>
     */
    public boolean hasDoubleF() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double doubleF = 8;</code>
     */
    public double getDoubleF() {
      return doubleF_;
    }

    public static final int FLOATF_FIELD_NUMBER = 9;
    private float floatF_;
    /**
     * <code>optional float floatF = 9;</code>
     */
    public boolean hasFloatF() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float floatF = 9;</code>
     */
    public float getFloatF() {
      return floatF_;
    }

    public static final int BYTESF_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString bytesF_;
    /**
     * <code>optional bytes bytesF = 10;</code>
     */
    public boolean hasBytesF() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes bytesF = 10;</code>
     */
    public com.google.protobuf.ByteString getBytesF() {
      return bytesF_;
    }

    public static final int BOOLF_FIELD_NUMBER = 11;
    private boolean boolF_;
    /**
     * <code>optional bool boolF = 11;</code>
     */
    public boolean hasBoolF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool boolF = 11;</code>
     */
    public boolean getBoolF() {
      return boolF_;
    }

    public static final int MAP_FIELD_NUMBER = 4;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> map_;
    private com.google.protobuf.MapField<String, String>
    internalGetMap() {
      if (map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapDefaultEntryHolder.defaultEntry);
      }
      return map_;
    }

    public int getMapCount() {
      return internalGetMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    public boolean containsMap(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getMap() {
      return getMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    public java.util.Map<String, String> getMapMap() {
      return internalGetMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    public String getMapOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map = 4;</code>
     */

    public String getMapOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SIMPLETYPETEST_FIELD_NUMBER = 18;
    private ComplexTypeTest simpleTypeTest_;
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    public boolean hasSimpleTypeTest() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    public ComplexTypeTest getSimpleTypeTest() {
      return simpleTypeTest_ == null ? ComplexTypeTest.getDefaultInstance() : simpleTypeTest_;
    }
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
     */
    public ComplexTypeTestOrBuilder getSimpleTypeTestOrBuilder() {
      return simpleTypeTest_ == null ? ComplexTypeTest.getDefaultInstance() : simpleTypeTest_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMap(),
          MapDefaultEntryHolder.defaultEntry,
          4);
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(6, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, email_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(8, doubleF_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(9, floatF_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(10, bytesF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(11, boolF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(18, getSimpleTypeTest());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<String, String> entry
           : internalGetMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        map__ = MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, map__);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, email_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, doubleF_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, floatF_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, bytesF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, boolF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getSimpleTypeTest());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof JprotobufBean)) {
        return super.equals(obj);
      }
      JprotobufBean other = (JprotobufBean) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasEmail() == other.hasEmail());
      if (hasEmail()) {
        result = result && getEmail()
            .equals(other.getEmail());
      }
      result = result && (hasDoubleF() == other.hasDoubleF());
      if (hasDoubleF()) {
        result = result && (
            Double.doubleToLongBits(getDoubleF())
            == Double.doubleToLongBits(
                other.getDoubleF()));
      }
      result = result && (hasFloatF() == other.hasFloatF());
      if (hasFloatF()) {
        result = result && (
            Float.floatToIntBits(getFloatF())
            == Float.floatToIntBits(
                other.getFloatF()));
      }
      result = result && (hasBytesF() == other.hasBytesF());
      if (hasBytesF()) {
        result = result && getBytesF()
            .equals(other.getBytesF());
      }
      result = result && (hasBoolF() == other.hasBoolF());
      if (hasBoolF()) {
        result = result && (getBoolF()
            == other.getBoolF());
      }
      result = result && internalGetMap().equals(
          other.internalGetMap());
      result = result && (hasSimpleTypeTest() == other.hasSimpleTypeTest());
      if (hasSimpleTypeTest()) {
        result = result && getSimpleTypeTest()
            .equals(other.getSimpleTypeTest());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasEmail()) {
        hash = (37 * hash) + EMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getEmail().hashCode();
      }
      if (hasDoubleF()) {
        hash = (37 * hash) + DOUBLEF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            Double.doubleToLongBits(getDoubleF()));
      }
      if (hasFloatF()) {
        hash = (37 * hash) + FLOATF_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getFloatF());
      }
      if (hasBytesF()) {
        hash = (37 * hash) + BYTESF_FIELD_NUMBER;
        hash = (53 * hash) + getBytesF().hashCode();
      }
      if (hasBoolF()) {
        hash = (37 * hash) + BOOLF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoolF());
      }
      if (!internalGetMap().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap().hashCode();
      }
      if (hasSimpleTypeTest()) {
        hash = (37 * hash) + SIMPLETYPETEST_FIELD_NUMBER;
        hash = (53 * hash) + getSimpleTypeTest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static JprotobufBean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static JprotobufBean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static JprotobufBean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static JprotobufBean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static JprotobufBean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static JprotobufBean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static JprotobufBean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static JprotobufBean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static JprotobufBean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static JprotobufBean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static JprotobufBean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static JprotobufBean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(JprotobufBean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rminfo.server.protoTest.protobuf.JprotobufBean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rminfo.server.protoTest.protobuf.JprotobufBean)
        JprotobufBeanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                JprotobufBean.class, Builder.class);
      }

      // Construct using com.rminfo.server.protoTest.protobuf.JprotobufBeanA.JprotobufBean.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSimpleTypeTestFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        email_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        doubleF_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        floatF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        bytesF_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        boolF_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutableMap().clear();
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = null;
        } else {
          simpleTypeTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor;
      }

      public JprotobufBean getDefaultInstanceForType() {
        return JprotobufBean.getDefaultInstance();
      }

      public JprotobufBean build() {
        JprotobufBean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public JprotobufBean buildPartial() {
        JprotobufBean result = new JprotobufBean(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.email_ = email_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.doubleF_ = doubleF_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.floatF_ = floatF_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bytesF_ = bytesF_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.boolF_ = boolF_;
        result.map_ = internalGetMap();
        result.map_.makeImmutable();
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (simpleTypeTestBuilder_ == null) {
          result.simpleTypeTest_ = simpleTypeTest_;
        } else {
          result.simpleTypeTest_ = simpleTypeTestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof JprotobufBean) {
          return mergeFrom((JprotobufBean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(JprotobufBean other) {
        if (other == JprotobufBean.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEmail()) {
          bitField0_ |= 0x00000004;
          email_ = other.email_;
          onChanged();
        }
        if (other.hasDoubleF()) {
          setDoubleF(other.getDoubleF());
        }
        if (other.hasFloatF()) {
          setFloatF(other.getFloatF());
        }
        if (other.hasBytesF()) {
          setBytesF(other.getBytesF());
        }
        if (other.hasBoolF()) {
          setBoolF(other.getBoolF());
        }
        internalGetMutableMap().mergeFrom(
            other.internalGetMap());
        if (other.hasSimpleTypeTest()) {
          mergeSimpleTypeTest(other.getSimpleTypeTest());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        JprotobufBean parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (JprotobufBean) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>optional string name = 5;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 6;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 6;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private Object email_ = "";
      /**
       * <code>optional string email = 7;</code>
       */
      public boolean hasEmail() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string email = 7;</code>
       */
      public String getEmail() {
        Object ref = email_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            email_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string email = 7;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string email = 7;</code>
       */
      public Builder setEmail(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 7;</code>
       */
      public Builder clearEmail() {
        bitField0_ = (bitField0_ & ~0x00000004);
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 7;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
        return this;
      }

      private double doubleF_ ;
      /**
       * <code>optional double doubleF = 8;</code>
       */
      public boolean hasDoubleF() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double doubleF = 8;</code>
       */
      public double getDoubleF() {
        return doubleF_;
      }
      /**
       * <code>optional double doubleF = 8;</code>
       */
      public Builder setDoubleF(double value) {
        bitField0_ |= 0x00000008;
        doubleF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double doubleF = 8;</code>
       */
      public Builder clearDoubleF() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doubleF_ = 0D;
        onChanged();
        return this;
      }

      private float floatF_ ;
      /**
       * <code>optional float floatF = 9;</code>
       */
      public boolean hasFloatF() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float floatF = 9;</code>
       */
      public float getFloatF() {
        return floatF_;
      }
      /**
       * <code>optional float floatF = 9;</code>
       */
      public Builder setFloatF(float value) {
        bitField0_ |= 0x00000010;
        floatF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float floatF = 9;</code>
       */
      public Builder clearFloatF() {
        bitField0_ = (bitField0_ & ~0x00000010);
        floatF_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesF_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytesF = 10;</code>
       */
      public boolean hasBytesF() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes bytesF = 10;</code>
       */
      public com.google.protobuf.ByteString getBytesF() {
        return bytesF_;
      }
      /**
       * <code>optional bytes bytesF = 10;</code>
       */
      public Builder setBytesF(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        bytesF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytesF = 10;</code>
       */
      public Builder clearBytesF() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bytesF_ = getDefaultInstance().getBytesF();
        onChanged();
        return this;
      }

      private boolean boolF_ ;
      /**
       * <code>optional bool boolF = 11;</code>
       */
      public boolean hasBoolF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool boolF = 11;</code>
       */
      public boolean getBoolF() {
        return boolF_;
      }
      /**
       * <code>optional bool boolF = 11;</code>
       */
      public Builder setBoolF(boolean value) {
        bitField0_ |= 0x00000040;
        boolF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool boolF = 11;</code>
       */
      public Builder clearBoolF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        boolF_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, String> map_;
      private com.google.protobuf.MapField<String, String>
      internalGetMap() {
        if (map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        return map_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableMap() {
        onChanged();;
        if (map_ == null) {
          map_ = com.google.protobuf.MapField.newMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        if (!map_.isMutable()) {
          map_ = map_.copy();
        }
        return map_;
      }

      public int getMapCount() {
        return internalGetMap().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public boolean containsMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getMap() {
        return getMapMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public java.util.Map<String, String> getMapMap() {
        return internalGetMap().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public String getMapOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public String getMapOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMap() {
        internalGetMutableMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public Builder removeMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableMap() {
        return internalGetMutableMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */
      public Builder putMap(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 4;</code>
       */

      public Builder putAllMap(
          java.util.Map<String, String> values) {
        internalGetMutableMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private ComplexTypeTest simpleTypeTest_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ComplexTypeTest, ComplexTypeTest.Builder, ComplexTypeTestOrBuilder> simpleTypeTestBuilder_;
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public boolean hasSimpleTypeTest() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public ComplexTypeTest getSimpleTypeTest() {
        if (simpleTypeTestBuilder_ == null) {
          return simpleTypeTest_ == null ? ComplexTypeTest.getDefaultInstance() : simpleTypeTest_;
        } else {
          return simpleTypeTestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public Builder setSimpleTypeTest(ComplexTypeTest value) {
        if (simpleTypeTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          simpleTypeTest_ = value;
          onChanged();
        } else {
          simpleTypeTestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public Builder setSimpleTypeTest(
          ComplexTypeTest.Builder builderForValue) {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = builderForValue.build();
          onChanged();
        } else {
          simpleTypeTestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public Builder mergeSimpleTypeTest(ComplexTypeTest value) {
        if (simpleTypeTestBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              simpleTypeTest_ != null &&
              simpleTypeTest_ != ComplexTypeTest.getDefaultInstance()) {
            simpleTypeTest_ =
              ComplexTypeTest.newBuilder(simpleTypeTest_).mergeFrom(value).buildPartial();
          } else {
            simpleTypeTest_ = value;
          }
          onChanged();
        } else {
          simpleTypeTestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public Builder clearSimpleTypeTest() {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = null;
          onChanged();
        } else {
          simpleTypeTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public ComplexTypeTest.Builder getSimpleTypeTestBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getSimpleTypeTestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      public ComplexTypeTestOrBuilder getSimpleTypeTestOrBuilder() {
        if (simpleTypeTestBuilder_ != null) {
          return simpleTypeTestBuilder_.getMessageOrBuilder();
        } else {
          return simpleTypeTest_ == null ?
              ComplexTypeTest.getDefaultInstance() : simpleTypeTest_;
        }
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.ComplexTypeTest simpleTypeTest = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ComplexTypeTest, ComplexTypeTest.Builder, ComplexTypeTestOrBuilder>
          getSimpleTypeTestFieldBuilder() {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ComplexTypeTest, ComplexTypeTest.Builder, ComplexTypeTestOrBuilder>(
                  getSimpleTypeTest(),
                  getParentForChildren(),
                  isClean());
          simpleTypeTest_ = null;
        }
        return simpleTypeTestBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.rminfo.server.protoTest.protobuf.JprotobufBean)
    }

    // @@protoc_insertion_point(class_scope:com.rminfo.server.protoTest.protobuf.JprotobufBean)
    private static final JprotobufBean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new JprotobufBean();
    }

    public static JprotobufBean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<JprotobufBean>
        PARSER = new com.google.protobuf.AbstractParser<JprotobufBean>() {
      public JprotobufBean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JprotobufBean(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JprotobufBean> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<JprotobufBean> getParserForType() {
      return PARSER;
    }

    public JprotobufBean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComplexTypeTestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rminfo.server.protoTest.protobuf.ComplexTypeTest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    boolean hasSimpleTypeTest();
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    SimpleTypeTest getSimpleTypeTest();
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    SimpleTypeTestOrBuilder getSimpleTypeTestOrBuilder();
  }
  /**
   * Protobuf type {@code com.rminfo.server.protoTest.protobuf.ComplexTypeTest}
   */
  public  static final class ComplexTypeTest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rminfo.server.protoTest.protobuf.ComplexTypeTest)
      ComplexTypeTestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComplexTypeTest.newBuilder() to construct.
    private ComplexTypeTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComplexTypeTest() {
      name_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ComplexTypeTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              SimpleTypeTest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = simpleTypeTest_.toBuilder();
              }
              simpleTypeTest_ = input.readMessage(SimpleTypeTest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(simpleTypeTest_);
                simpleTypeTest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ComplexTypeTest.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIMPLETYPETEST_FIELD_NUMBER = 2;
    private SimpleTypeTest simpleTypeTest_;
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    public boolean hasSimpleTypeTest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    public SimpleTypeTest getSimpleTypeTest() {
      return simpleTypeTest_ == null ? SimpleTypeTest.getDefaultInstance() : simpleTypeTest_;
    }
    /**
     * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
     */
    public SimpleTypeTestOrBuilder getSimpleTypeTestOrBuilder() {
      return simpleTypeTest_ == null ? SimpleTypeTest.getDefaultInstance() : simpleTypeTest_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getSimpleTypeTest());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSimpleTypeTest());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ComplexTypeTest)) {
        return super.equals(obj);
      }
      ComplexTypeTest other = (ComplexTypeTest) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasSimpleTypeTest() == other.hasSimpleTypeTest());
      if (hasSimpleTypeTest()) {
        result = result && getSimpleTypeTest()
            .equals(other.getSimpleTypeTest());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasSimpleTypeTest()) {
        hash = (37 * hash) + SIMPLETYPETEST_FIELD_NUMBER;
        hash = (53 * hash) + getSimpleTypeTest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ComplexTypeTest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ComplexTypeTest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ComplexTypeTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ComplexTypeTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ComplexTypeTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ComplexTypeTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ComplexTypeTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ComplexTypeTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ComplexTypeTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ComplexTypeTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ComplexTypeTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ComplexTypeTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ComplexTypeTest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rminfo.server.protoTest.protobuf.ComplexTypeTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rminfo.server.protoTest.protobuf.ComplexTypeTest)
        ComplexTypeTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ComplexTypeTest.class, Builder.class);
      }

      // Construct using com.rminfo.server.protoTest.protobuf.JprotobufBeanA.ComplexTypeTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSimpleTypeTestFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = null;
        } else {
          simpleTypeTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor;
      }

      public ComplexTypeTest getDefaultInstanceForType() {
        return ComplexTypeTest.getDefaultInstance();
      }

      public ComplexTypeTest build() {
        ComplexTypeTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ComplexTypeTest buildPartial() {
        ComplexTypeTest result = new ComplexTypeTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (simpleTypeTestBuilder_ == null) {
          result.simpleTypeTest_ = simpleTypeTest_;
        } else {
          result.simpleTypeTest_ = simpleTypeTestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ComplexTypeTest) {
          return mergeFrom((ComplexTypeTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ComplexTypeTest other) {
        if (other == ComplexTypeTest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSimpleTypeTest()) {
          mergeSimpleTypeTest(other.getSimpleTypeTest());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ComplexTypeTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ComplexTypeTest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private SimpleTypeTest simpleTypeTest_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SimpleTypeTest, SimpleTypeTest.Builder, SimpleTypeTestOrBuilder> simpleTypeTestBuilder_;
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public boolean hasSimpleTypeTest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public SimpleTypeTest getSimpleTypeTest() {
        if (simpleTypeTestBuilder_ == null) {
          return simpleTypeTest_ == null ? SimpleTypeTest.getDefaultInstance() : simpleTypeTest_;
        } else {
          return simpleTypeTestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public Builder setSimpleTypeTest(SimpleTypeTest value) {
        if (simpleTypeTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          simpleTypeTest_ = value;
          onChanged();
        } else {
          simpleTypeTestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public Builder setSimpleTypeTest(
          SimpleTypeTest.Builder builderForValue) {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = builderForValue.build();
          onChanged();
        } else {
          simpleTypeTestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public Builder mergeSimpleTypeTest(SimpleTypeTest value) {
        if (simpleTypeTestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              simpleTypeTest_ != null &&
              simpleTypeTest_ != SimpleTypeTest.getDefaultInstance()) {
            simpleTypeTest_ =
              SimpleTypeTest.newBuilder(simpleTypeTest_).mergeFrom(value).buildPartial();
          } else {
            simpleTypeTest_ = value;
          }
          onChanged();
        } else {
          simpleTypeTestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public Builder clearSimpleTypeTest() {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTest_ = null;
          onChanged();
        } else {
          simpleTypeTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public SimpleTypeTest.Builder getSimpleTypeTestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSimpleTypeTestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      public SimpleTypeTestOrBuilder getSimpleTypeTestOrBuilder() {
        if (simpleTypeTestBuilder_ != null) {
          return simpleTypeTestBuilder_.getMessageOrBuilder();
        } else {
          return simpleTypeTest_ == null ?
              SimpleTypeTest.getDefaultInstance() : simpleTypeTest_;
        }
      }
      /**
       * <code>optional .com.rminfo.server.protoTest.protobuf.SimpleTypeTest simpleTypeTest = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SimpleTypeTest, SimpleTypeTest.Builder, SimpleTypeTestOrBuilder>
          getSimpleTypeTestFieldBuilder() {
        if (simpleTypeTestBuilder_ == null) {
          simpleTypeTestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SimpleTypeTest, SimpleTypeTest.Builder, SimpleTypeTestOrBuilder>(
                  getSimpleTypeTest(),
                  getParentForChildren(),
                  isClean());
          simpleTypeTest_ = null;
        }
        return simpleTypeTestBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.rminfo.server.protoTest.protobuf.ComplexTypeTest)
    }

    // @@protoc_insertion_point(class_scope:com.rminfo.server.protoTest.protobuf.ComplexTypeTest)
    private static final ComplexTypeTest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ComplexTypeTest();
    }

    public static ComplexTypeTest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<ComplexTypeTest>
        PARSER = new com.google.protobuf.AbstractParser<ComplexTypeTest>() {
      public ComplexTypeTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ComplexTypeTest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ComplexTypeTest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ComplexTypeTest> getParserForType() {
      return PARSER;
    }

    public ComplexTypeTest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleTypeTestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.rminfo.server.protoTest.protobuf.SimpleTypeTest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 2;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code com.rminfo.server.protoTest.protobuf.SimpleTypeTest}
   */
  public  static final class SimpleTypeTest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.rminfo.server.protoTest.protobuf.SimpleTypeTest)
      SimpleTypeTestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleTypeTest.newBuilder() to construct.
    private SimpleTypeTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleTypeTest() {
      name_ = "";
      value_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleTypeTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SimpleTypeTest.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>optional int32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SimpleTypeTest)) {
        return super.equals(obj);
      }
      SimpleTypeTest other = (SimpleTypeTest) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (getValue()
            == other.getValue());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SimpleTypeTest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleTypeTest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleTypeTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleTypeTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleTypeTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleTypeTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleTypeTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SimpleTypeTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SimpleTypeTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SimpleTypeTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SimpleTypeTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SimpleTypeTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SimpleTypeTest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.rminfo.server.protoTest.protobuf.SimpleTypeTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.rminfo.server.protoTest.protobuf.SimpleTypeTest)
        SimpleTypeTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SimpleTypeTest.class, Builder.class);
      }

      // Construct using com.rminfo.server.protoTest.protobuf.JprotobufBeanA.SimpleTypeTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return JprotobufBeanA.internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor;
      }

      public SimpleTypeTest getDefaultInstanceForType() {
        return SimpleTypeTest.getDefaultInstance();
      }

      public SimpleTypeTest build() {
        SimpleTypeTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SimpleTypeTest buildPartial() {
        SimpleTypeTest result = new SimpleTypeTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SimpleTypeTest) {
          return mergeFrom((SimpleTypeTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SimpleTypeTest other) {
        if (other == SimpleTypeTest.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SimpleTypeTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SimpleTypeTest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.rminfo.server.protoTest.protobuf.SimpleTypeTest)
    }

    // @@protoc_insertion_point(class_scope:com.rminfo.server.protoTest.protobuf.SimpleTypeTest)
    private static final SimpleTypeTest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SimpleTypeTest();
    }

    public static SimpleTypeTest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<SimpleTypeTest>
        PARSER = new com.google.protobuf.AbstractParser<SimpleTypeTest>() {
      public SimpleTypeTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleTypeTest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimpleTypeTest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SimpleTypeTest> getParserForType() {
      return PARSER;
    }

    public SimpleTypeTest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024JprotobufBeanA.ptoto\022$com.rminfo.serve" +
      "r.protoTest.protobuf\"\276\002\n\rJprotobufBean\022\014" +
      "\n\004name\030\005 \001(\t\022\n\n\002id\030\006 \001(\005\022\r\n\005email\030\007 \001(\t\022" +
      "\017\n\007doubleF\030\010 \001(\001\022\016\n\006floatF\030\t \001(\002\022\016\n\006byte" +
      "sF\030\n \001(\014\022\r\n\005boolF\030\013 \001(\010\022I\n\003map\030\004 \003(\0132<.c" +
      "om.rminfo.server.protoTest.protobuf.Jpro" +
      "tobufBean.MapEntry\022M\n\016simpleTypeTest\030\022 \001" +
      "(\01325.com.rminfo.server.protoTest.protobu" +
      "f.ComplexTypeTest\032*\n\010MapEntry\022\013\n\003key\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"m\n\017ComplexTypeTest" +
      "\022\014\n\004name\030\001 \001(\t\022L\n\016simpleTypeTest\030\002 \001(\01324" +
      ".com.rminfo.server.protoTest.protobuf.Si" +
      "mpleTypeTest\"-\n\016SimpleTypeTest\022\014\n\004name\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\005B6\n$com.rminfo.server" +
      ".protoTest.protobufB\016JprotobufBeanA"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor,
        new String[] { "Name", "Id", "Email", "DoubleF", "FloatF", "BytesF", "BoolF", "Map", "SimpleTypeTest", });
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_descriptor =
      internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_descriptor.getNestedTypes().get(0);
    internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rminfo_server_protoTest_protobuf_JprotobufBean_MapEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rminfo_server_protoTest_protobuf_ComplexTypeTest_descriptor,
        new String[] { "Name", "SimpleTypeTest", });
    internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_rminfo_server_protoTest_protobuf_SimpleTypeTest_descriptor,
        new String[] { "Name", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
